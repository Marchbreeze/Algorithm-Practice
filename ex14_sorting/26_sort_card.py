'''
< 26. 카드 묶음 정렬하기 >
여러 숫자 묶음을 두개씩 비교하며 합쳐가려고 한다.
10,20,40 장의 묶음이 있다면
10과 20을 먼저 합치면 (10+20)+(30+40)=100
10과 40을 먼저 합치면 (10+40)+(50+20)=120
이므로 덜 효율적이다.
N개의 숫자 카드 묶음의 각 크기가 주어질 때, 최소 몇번의 비교가 필요한가?
(1 <= N <= 100,000)

아이디어:
10 20 30 40 50 있으면
(10+20)+(10+20+30)+(10+20+30+40)... 이므로
작은순으로 여러번 더하면최소 횟수 도출 가능할듯
'''

# 묶음 수 입력
n = int(input())

# 묶음 크기 입력
array = []
for _ in range(n):
    array.append(int(input()))

# 정렬 후 곱하기
sum = 0
array.sort(reverse=True)
for i in range(n):
    sum += (i+1) * array[i]
sum -= array[-1]

# 결과 출력
print(sum)