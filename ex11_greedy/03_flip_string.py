'''
<03. 문자열 뒤집기>
0과 1로 이루어진 문자열 S가 있다.
S에서 연속된 하나 이상의 숫자를 잡고 뒤집을 수 있다 (0->1, 1->0)
S를 모두 0 또는 모두 1로 통일시켜 만들기위한 최소 횟수를 구하시오.
(1 <= S <= 100만)

아이디이 구상 :
- 01, 10같은 변환되는 구역 찾기
- 010(2개) = 1번
- 0101(3개) = 2번
- 01010(4개) = 2번
- 010101(5개) = 3번
-> 개수 반으로 접고 올림하면 최소 횟수 찾을 수 있음
'''
import math

# 문자열 입력받기
number = input()

# 변환구역 카운팅하기
count = 0

# 문자열 두개씩 보면서 변환 확인하기
for i in range(len(number)-1):
    num = number[i:i+2]
    if (num == "01" or num == "10"):
        count += 1

# 올림한 결과값 설정하기
result = math.ceil(count/2)

print(result)