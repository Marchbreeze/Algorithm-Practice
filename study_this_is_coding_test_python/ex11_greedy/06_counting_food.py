'''
<6. 무지의 먹방 라이브>
회전판에 먹어야 할 N개의 음식이 있고, 각 음식은 1~N의 번호가 있다.
(1 <= N <= 2,000)

각 음식을 섭취하는 데에는 일정 시간이 소요된다.
1,2,...,N,1,2,...,N 의 순서로, 한 음식을 1초동안만 섭취한다.
다음 음식이 남지 않았다면 그 다음 번호의 음식을 섭취한다.
(1 <= 시간 <= 1,000)

시작한지 K초 이후에 남은 시간과 몇 번 음식을 섭취하면 되는지를 알고자 한다.
매 초마다 먹는 음식과 남은 시간, 다 먹은 음식에 대한 정보를 출력하고, K초 이후의 정보를 출력한다.
(1 <= K <= 2*10^13)
'''

# 음식 소요시간 입력받기
food_times = list(map(int, input().split()))

# 네트워크 장애 시간 입력받기
k = int(input())

# 장애 시간까지 반복
n = 1
for i in range(k):
    # 시간 프린트 설정
    print(i,"~", i+1, "초 동안에 ", end='')

    # 섭취한 음식 프린트 설정
    if (food_times[n-1] == 0):
        print("(", n, "번 음식은 다 먹었으므로) ", end='')
        n += 1
    print(n, "번 음식을 섭취한다. ", end='')

    # 음식 섭취 처리
    food_times[n-1] -= 1
    n += 1
    if (n == len(food_times) + 1):
        n = 1

    # 남음 음식 시간 프린트 설정
    print("남은 시간은 ", food_times, "입니다")

# 장애 시간 프린트 설정
print(k, "초에서 네트워크 장애가 발생했습니다. ", n, "번 음식부터 다시 먹기 시작하세요.")